<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!--
    version: $Id$
-->

<chapter id="sample">
    <title>Sample Code</title>

    <para>
        You can check out sample code from the MyBatis repository on Google Code.
        <itemizedlist>
            <listitem>
                <para>
                    <ulink
                        url="http://mybatis.googlecode.com/svn/sub-projects/mybatis-guice/trunk/src/test/java/org/mybatis/guice/sample/">Java code</ulink>
                </para>
            </listitem>
            <listitem>
                <para>
                    <ulink
                        url="http://mybatis.googlecode.com/svn/sub-projects/mybatis-guice/trunk/src/test/resources/org/mybatis/guice/sample/">Config files</ulink>
                </para>
            </listitem>
        </itemizedlist>
    </para>
    <para>
        Any of the samples can be run with JUnit 4.
  </para>
  <para>
        The sample code shows a typical design where a transactional service gets
        domain objects from a data access layer.
  </para>
  <para>
        The service is composed by an interface <literal>FooService.java</literal>
        and an implementation <literal>FooServiceImpl.java</literal>. 
        This service is transactional so a transaction is started when its method 
        is called and commited when the method ends without throwing a unchecked exception.
        <programlisting language="java"><![CDATA[public class FooServiceMapperImpl implements FooService {

    @Inject
    private UserMapper userMapper;

    @Transactional
    public User doSomeBusinessStuff(String userId) {
        return this.userMapper.getUser(userId);
    }

}]]></programlisting>
        Notice that transactional behaviour is configured with the
        <literal>@Transactional</literal> annotation. 
    </para>

    <para>
        This service calls a data access layer built with MyBatis. This layer
        is composed by a MyBatis mapper interface <literal>UserMapper.java</literal>
        and a DAO composed by its interface <literal>UserDao.java</literal>
        and its implementation <literal>UserDaoImpl.java</literal>
    </para>

    <para>
        The database access layer has been implemented using a mapper and a Dao that 
        internally uses a <literal>SqlSession</literal>.
        <table>
            <caption>Sample test classes</caption>
            <thead>
                <tr>
                    <th>Sample test</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <literal>SampleBasicTest</literal>
                    </td>
                    <td>
                        Shows you the recommended and simplest configuration
                        based on a mapper.
                    </td>
                </tr>
                <tr>
                    <td>
                        <literal>SampleSqlSessionTest</literal>
                    </td>
                    <td>
                        Shows how to hand code
                        a DAO using a managed
                        <literal>SqlSession</literal>
                    </td>
                </tr>
            </tbody>
        </table>
        Please have a look and run the sample code to see MyBatis-Guice in action.
    </para>

</chapter>
