                                    ------
                                    Usage
                                    ------
                                    The myBatis Team
                                    ------
                                     2010

~~
~~   Copyright 2010 The myBatis Team
~~
~~   Licensed under the Apache License, Version 2.0 (the "License");
~~   you may not use this file except in compliance with the License.
~~   You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~


Usage

  Brief examples on how to use the  goals.

* Generic Plugin configuration information

  See the following links for information about including and configuring plugins in your project:

  *{{{http://maven.apache.org/guides/mini/guide-configuring-plugins.html}Configuring Plugins}}

  *{{{http://maven.apache.org/guides/plugin/guide-java-plugin-development.html}Plugin Development}}

  *{{{http://maven.apache.org/guides/introduction/introduction-to-plugin-prefix-mapping.html}Plugin Prefix}}


* Pom.xml Plugin configuration

  To use Migration Maven plugin in your project you have to configurte your pom file like this:

+---+
  ...
  <plugins>
      <plugin>
          <groupId>org.mybatis.maven</groupId>
          <artifactId>maven-migration-plugin</artifactId>
          <version> [version] </version>
          <configuration>
              <repository> /path/to/migration/repository </repository>
          </configuration>
          <dependencies>
             [ add your jdbc driver depencency ]
          </dependencies>
        </plugin>
      ...
  <plugins>
+---+


* The <<<migration:status>>> mojo

 This goal prints the current migration status of database.
 A tipical out is this:

+---+
  mvn migrate:status -Dmigration.path=/path/to/migration/repository

  ...
 [INFO] Executing  Apache Migration StatusCommand
 [INFO] ID             Applied At          Description
 [INFO] ================================================================================
 [INFO] 20100400000001    ...pending...    create changelog
 [INFO] 20100400000002    ...pending...    first migration
 [INFO] 20100400000003    ...pending...    second migration
 [INFO]
 ...
+---+



* The <<<migration:check>>> goal

 The <<<migration:check>>> goal checks the current status of your database migration and
 fails if one or more script are pending.

 A typical use of this goal is check the migration status into your maven build life cycle

+---+
  <plugins>
    <plugin>
        <groupId>org.mybatis.maven</groupId>
        <artifactId>maven-migration-plugin</artifactId>
        <version> [plugin version] </version>
        <configuration>
            <repository [migration repository path] </repository>
        </configuration>
        <executions>
        <execution>
            <id>migration-chack</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
            <dependency> [your jdbc dependency] </dependency>
        </dependencies>
    </plugin>
+---+

 and then

+---+
 mvn clean test
+---+

 this goal fails if migration plugin founds one or more pending script.

 To *skip* the migration check set the properties <<<migration.skip>>> like this:

+---+
 mvn -Dmigration.skip=true clean test
+---+






* Site report

 You can configure your pom.xml to create a simple report of the status of your database


+---+
...
  <plugins>
      <plugin>
          <groupId>org.mybatis.maven</groupId>
          <artifactId>maven-migration-plugin</artifactId>
          <version> [version] </version>
          <configuration>
              <repository> /path/to/migration/repository </repository>
          </configuration>
          <dependencies>
             [ add your jdbc driver depencency ]
          </dependencies>
        </plugin>
      ...
  <plugins>

  ...

  <reporting>
        <plugins>
            <plugin>
                <groupId>org.mybatis.maven</groupId>
                <artifactId>maven-migration-plugin</artifactId>
                <version> [version] </version>
                <configuration>
                    <repository> /path/to/migration/repository </repository>
                </configuration>
            </plugin>
        </plugins>
   </reporting>

    ...
+---+

 and now you can invoke:

+---+
 mvn site
+---+
